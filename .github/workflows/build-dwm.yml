name: Build and Release DWM Package

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-22.04

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Get DWM Version and Release
        id: get_version
        run: |
          VERSION=$(grep 'pkgver=' PKGBUILD | cut -d'=' -f2)
          RELEASE=$(grep 'pkgrel=' PKGBUILD | cut -d'=' -f2)
          echo "DWM version is $VERSION, release is $RELEASE"
          echo "VERSION=$VERSION" >> $GITHUB_ENV
          echo "RELEASE=$RELEASE" >> $GITHUB_ENV

      - name: Build DWM package in Arch Linux
        run: |
          docker run --rm -v ${{ github.workspace }}:/workspace -w /workspace archlinux:base-devel bash -c "
            useradd -m builder &&
            passwd -d builder &&
            echo 'builder ALL=(ALL) NOPASSWD: ALL' >> /etc/sudoers &&
            chown -R builder:builder /workspace &&
            pacman -Syu --noconfirm &&
            pacman -S --noconfirm libx11 libxft libxinerama imlib2 freetype2 git &&
            sudo -u builder bash -c '
              cd /workspace &&
              makepkg --syncdeps --noconfirm --cleanbuild &&
              ls -lh /workspace
            '
          "

      - name: Get Existing Release (if any)
        id: existing_release
        run: |
          RELEASES=$(curl -H "Authorization: token ${{ secrets.GH_TOKEN }}" \
            https://api.github.com/repos/${{ github.repository }}/releases)
          echo "Existing releases: $RELEASES"
          EXISTING_RELEASE_ID=$(echo $RELEASES | jq '.[0].id')
          echo "Existing release ID: $EXISTING_RELEASE_ID"
          echo "EXISTING_RELEASE_ID=$EXISTING_RELEASE_ID" >> $GITHUB_ENV

      - name: Delete Old Release if Exists
        if: ${{ env.EXISTING_RELEASE_ID != 'null' && env.EXISTING_RELEASE_ID != '' }}
        run: |
          curl -X DELETE \
            -H "Authorization: token ${{ secrets.GH_TOKEN }}" \
            "https://api.github.com/repos/${{ github.repository }}/releases/${{ env.EXISTING_RELEASE_ID }}"

      - name: Create a New Release
        run: |
          VERSION_TAG="v${{ env.VERSION }}-${{ env.RELEASE }}"
          curl -X POST \
            -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            -H "Content-Type: application/json" \
            -d '{"tag_name": "'"${VERSION_TAG}"'", "name": "'"${VERSION_TAG}"'", "body": "Release for DWM ${VERSION_TAG}"}' \
            https://api.github.com/repos/${{ github.repository }}/releases

      - name: Upload package to GitHub release
        run: |
          # Upload the package artifact (tar.zst file)
          curl -X POST \
            -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            -H "Content-Type: application/octet-stream" \
            --data-binary @/workspace/*.pkg.tar.zst \
            "https://uploads.github.com/repos/${{ github.repository }}/releases/${{ steps.create_release.outputs.id }}/assets?name=dwm-package-${{ env.VERSION }}-${{ env.RELEASE }}.pkg.tar.zst"
