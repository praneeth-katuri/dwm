name: Build DWM Package

on:
  push:
    branches:
      - main
  pull_request:
  # Trigger on new version tags too
  tags:
    - "v*"  # Adjust this if your versioning follows a different scheme (e.g., v1.0.0)

jobs:
  build:
    runs-on: ubuntu-22.04  # You can change this based on your needs

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Fetch full history to avoid shallow clone issues

      - name: Get DWM Version and Release
        id: get_version
        run: |
          VERSION=$(grep 'pkgver=' PKGBUILD | cut -d'=' -f2)
          REL=$(grep 'pkgrel=' PKGBUILD | cut -d'=' -f2)
          echo "DWM version is $VERSION, release is $REL"
          echo "VERSION=$VERSION" >> $GITHUB_ENV
          echo "RELEASE=$REL" >> $GITHUB_ENV

      - name: Build DWM package in Arch Linux
        run: |
          docker run --rm -v ${{ github.workspace }}:/workspace -w /workspace archlinux:base-devel bash -c "
            # Create a non-root user
            useradd -m builder &&
            passwd -d builder &&
            echo 'builder ALL=(ALL) NOPASSWD: ALL' >> /etc/sudoers &&
            
            # Fix permissions to allow builder user to write to /workspace
            chown -R builder:builder /workspace &&
            
            # Update system as root
            pacman -Syu --noconfirm &&
            pacman -S --noconfirm libx11 libxft libxinerama imlib2 freetype2 git &&
            
            # Build the package as a non-root user
            sudo -u builder bash -c '
              cd /workspace &&
              makepkg --syncdeps --noconfirm --cleanbuild
            '
          "

      - name: Prepare directory for artifact upload
        run: |
          mkdir -p build_artifacts
          mv *.pkg.tar.zst build_artifacts/  # Move the generated package to the directory

      - name: Upload package artifact
        uses: actions/upload-artifact@v4
        with:
          name: dwm-package-${{ env.VERSION }}-${{ env.RELEASE }}  # Dynamic version and release from environment variables
          path: build_artifacts/

      - name: Create GitHub release
        uses: gh-actions/create-release@v1
        with:
          tag_name: v${{ env.VERSION }}-${{ env.RELEASE }}
          release_name: "DWM v${{ env.VERSION }}-${{ env.RELEASE }} Release"
          body: |
            DWM version: ${{ env.VERSION }}-${{ env.RELEASE }}
            New release of the DWM package.
          files: |
            build_artifacts/*.pkg.tar.zst
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}

      - name: Cleanup old releases
        run: |
          # List all releases and delete releases older than the current one
          releases=$(gh release list --limit 100 --json name,createdAt --jq '.[] | select(.createdAt < "$(date --date="1 week ago" --utc +%Y-%m-%dT%H:%M:%SZ")") | .name')
          for release in $releases; do
            gh release delete "$release" --yes
          done
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
